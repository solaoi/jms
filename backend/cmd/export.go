package cmd

import (
	"path"
	"os"
	"log"
	"encoding/json"

	"github.com/spf13/cobra"
	"github.com/jinzhu/gorm"
	_ "github.com/mattn/go-sqlite3"

	"github.com/solaoi/jms/cmd/graph/model"
)

var exportCmd = &cobra.Command{
	Use:   "export",
	Short: "export JSON to the public directory under the current.",
	Long: `export JSON to the public directory under the current.

This command exports JSON generated by the run command.
JSON is exported to the public directory under the current.
If we do not find the public directory, we make it!`,
	Run: export,
}

func export(cmd *cobra.Command, args []string) {
	currentDir, err := os.Getwd()
	if err != nil {
		log.Fatal(err)
	}

	var jmsDir = path.Join(currentDir, ".jms")
	if f, err := os.Stat(jmsDir); os.IsNotExist(err) || !f.IsDir() {
		log.Fatal("we should run jms init at first")
	}

	var jmsDb = path.Join(jmsDir, "jms.db")
	db, err := gorm.Open("sqlite3", jmsDb)
	if err != nil {
		log.Fatalln(err)
	}
	defer db.Close()

	var template model.Template
	db.Find(&template, 1)

	var publicDir = path.Join(currentDir, "public")
	if f, err := os.Stat(publicDir); os.IsNotExist(err) || !f.IsDir() {
		if err := os.Mkdir(publicDir, 0777); err != nil {
			log.Fatal(err)
		}
	}

	var sampleJson = path.Join(publicDir, "sample.json")
	file, err := os.Create(sampleJson)
    if err != nil {
		log.Fatal(err)
    }
    defer file.Close()

	json, err := json.Marshal(template)
	if err != nil {
		log.Fatal(err)
    }
    file.Write(([]byte)(json))
}

func init() {
	rootCmd.AddCommand(exportCmd)
}
